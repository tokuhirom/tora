sub dir($path) {
    Path::Dir.new($path);
}

sub file($path) {
    Path::File.new($path);
}

$Path::SEPCHAR='/';

class Path::Base {
    sub stat() {
        ...
    }
    sub to_str() {
        ${self};
    }
    sub basename() {
        ...
    }
    sub parent() {
        ...
    }
}

class Path::Dir is Path::Base {
    sub new($path) {
        self.bless($path);
    }
    sub file($path) {
        Path::File.new(${self} + $Path::SEPCHAR + $path);
    }
    sub subdir($path) {
        Path::Dir.new(${self} + $Path::SEPCHAR + $path);
    }
    sub children() {
        ...
    }
    sub mkpath() {
        ...
    }
    sub rmtree() {
        ...
    }
    sub __iter__() {
        ...
    }
    sub __next__() {
        ...
    }

    # dir(...).recurse(-> $x { say($x) })
    sub recurse($code) {
        ...
    }
}

class Path::File is Path::Base {
    sub new($path) {
        self.bless($path);
    }
    sub open($mode) {
        return File.open(${self}, $mode);
    }
    sub read() {
        self.open('r').read();
    }
}

