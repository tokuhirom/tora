TODO
====

builtin functions
-----------------



builtin objects
---------------

Array.new()
Array#sort()
Array#sort!()
Array#reverse()
Array#map()
Array#any()
Array#shuffle()
Array#flatten()
Array#push()
Array#pop()
Array#shift()
Array#unshift()

open()
File#write()
File#read(n)
File#sync()
File#seek()
File#rewind()
File#tell()

opendir()
Dir#__next__
Dir#__iter__

String#substr(n)
String#substr(n, m)
String#replace(regexp|str, code)
String#replace(regexp|str, str)
String#match(regexp|str, code)

syntax
-------

 * open($fname).read();
 * given-when
 * q{}
 * qq{}
 * say $_ for $array;
 * return if $_;
 * $array.map(^{ say($_); });
 * [1,2,2].map(sub { say($_) });
 * $array.sort({ $_[0] <=> $_[1] }).reverse();
 * lambda syntax: ^{ }
 * <<'...'
 * "hogehoge $foo"
 * "hogehoge #{ 3+2 }"
 * last
 * next
 * continue
 * for (my $v in [1,2,3]) { say($v); }
 * my ($k, $v)
 * $i++
 * __FILE__
 * $PROGRAM_NAME($0)
 * $x ** 2

feature
-------

  * require
  * import
  * ENV
  * <DATA>
  * -n option
  * -p option
  * -i option
  * __FILE__
  * do not create scope if thre is no var definition.
  * eval() with upper stack introspeciton like 'my $x=4649; eval("say($x)")'

Library
-------

 * Socket
 * flock
 * readline
 * ANSIColor
 * HTTP client
 * HTTP server
 * B::Deparse
 * Test::More

