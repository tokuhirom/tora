import os
import json
from glob import glob

conf = json.loads(open('../../config.json').read())

if os.name == 'nt':
    libs = conf['LIBS'] + ['uv', 'psapi', 'iphlpapi', 'pthread']
else:
    libs = conf['LIBS'] + ['m', 'rt', 'pthread']

env = Environment(
    CXXFLAGS=conf['CXXFLAGS'],
    CCFLAGS=conf['CCFLAGS'],
    LINKFLAGS=conf['LINKFLAGS'],
    CPPPATH=conf['CPPPATH']+['../../vendor/libuv/include/'],
    CC=conf['CC'],
    CXX=conf['CXX'],
    SHLIBPREFIX=conf['SHLIBPREFIX'],
    LIBS=libs,
    tools=conf['TOOLS'],
)

# see http://stackoverflow.com/questions/2246399/scons-to-make-a-shared-library-so-with-a-static-libarary-a
env['STATIC_AND_SHARED_OBJECTS_ARE_THE_SAME']=1

if os.name == 'nt':
    libuv = env.Command('../../vendor/libuv/uv' + env.get('LIBSUFFIX'), [], 'cmd /c "cd ..\\..\\vendor\\libuv && mingw32-make"');
else:
    libuv = env.Command('../../vendor/libuv/uv' + env.get('LIBSUFFIX'), [], 'cd ../../vendor/libuv/ && make CFLAGS+=-fPIC');

env.Append(LIBPATH=['../../vendor/libuv/', '../../'])

shlib = env.SharedLibrary("lib/UV_" + conf['TORA_EXTSUFFIX'], ['uv.cc', libuv])
Default(shlib)

env.Command('test', [shlib], 'prove -v --exec "../../bin/tora -I ../Socket/lib/ -I lib -I ../../lib/" t/*.tra')

installs = []
for x in os.listdir('lib/'):
    dst = conf['TORA_LIBPREFIX'] + x
    src = "lib/" + x
    installs += [env.InstallAs(dst, src)]

env.Alias('install', [shlib, installs])
