use Test::More *;

note("substr"); {
    is("foobar".substr(3), "bar");
    is("foobar".substr(3,2), "ba");
}

note("scan"); {
    is("ablacadabla".scan(/.a/).tora(), ["la","ca","da","la"].tora());
    is("hoge:045-111-2222 boke:045-222-2222".scan(/(\S+):([\d\-]+)/).tora(), [["hoge", "045-111-2222"], ["boke", "045-222-2222"]].tora());
}

note('split'); {
    is('foo'.split(//).tora(), qw(f o o).tora());
    is("x\nb\nc".split(/\n/).tora(), qw(x b c).tora());
    is('aaaXbbbXccc'.split(/X/).tora(), qw(aaa bbb ccc).tora());

    # split with limit
    is("x\nb\nc\nd".split(/\n/, 0).tora(), ["x", "b", "c", "d"].tora());
    is("x\nb\nc\nd".split(/\n/, 1).tora(), ["x\nb\nc\nd"].tora());
    is("x\nb\nc\nd".split(/\n/, 2).tora(), ["x", "b\nc\nd"].tora());
    is("x\nb\nc\nd".split(/\n/, 3).tora(), ["x", "b", "c\nd"].tora());
    is("x\nb\nc\nd".split(/\n/, 4).tora(), ["x", "b", "c", "d"].tora());
    is("x\nb\nc\nd".split(/\n/, 5).tora(), ["x", "b", "c", "d"].tora());

    # split with limit with empty pattern

    is("12345".split(//, 0).tora(), qw(1 2 3 4 5).tora());
    is("12345".split(//, 1).tora(), qw(12345).tora());
    is("12345".split(//, 2).tora(), qw(1 2345).tora());
    is("12345".split(//, 3).tora(), qw(1 2 345).tora());
    is("12345".split(//, 4).tora(), qw(1 2 3 45).tora());
    is("12345".split(//, 5).tora(), qw(1 2 3 4 5).tora());
    is("12345".split(//, 6).tora(), qw(1 2 3 4 5).tora());
};

note("index"); {
    is("foobar".index("foo"), 0);
    is("foobar".index("oo"), 1);
    is("foobar".index("r"), 5);
    is("foobar".index("x"), -1);
    is("foobar".index("r", 1), 5); # same as perl5.
};

note("uc"); {
    is("fOobar1234".upper, 'FOOBAR1234');
    is("FoobAr1234".lower, 'foobar1234');
};

note("*"); {
    is("hoge"*3, "hogehogehoge");
}

note("encode"); {
    is('ほげほげ'.encode('euc-jp'), b"\xa4\xdb\xa4\xb2\xa4\xdb\xa4\xb2");
}

done_testing();

