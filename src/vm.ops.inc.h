void PP_OP_PUSH_TRUE();
void PP_OP_PUSH_FALSE();
void PP_OP_PUSH_UNDEF();
void PP_OP_PUSH_INT();
void PP_OP_PUSH_DOUBLE();
void PP_OP_PUSH_STRING();
void PP_OP_PUSH_VALUE();
void PP_OP_NEW_RANGE();
void PP_OP_FUNCDEF();
void PP_OP_CLOSUREDEF();
void PP_OP_GETCLOSURE();
void PP_OP_SETCLOSURE();
void PP_OP_SUB();
void PP_OP_DIV();
void PP_OP_MUL();
void PP_OP_ADD();
void PP_OP_BUILTIN_FUNCALL();
void PP_OP_FUNCALL();
void PP_OP_METHOD_CALL();
void PP_OP_RETURN();
void PP_OP_ENTER();
void PP_OP_LEAVE();
void PP_OP_PUSH_IDENTIFIER();
void PP_OP_DUMP();
void PP_OP_JUMP_IF_FALSE();
void PP_OP_JUMP();
void PP_OP_EQ();
void PP_OP_GT();
void PP_OP_LT();
void PP_OP_GE();
void PP_OP_LE();
void PP_OP_SETLOCAL();
void PP_OP_SETDYNAMIC();
void PP_OP_GETDYNAMIC();
void PP_OP_GETLOCAL();
void PP_OP_GET_ITEM();
void PP_OP_SET_ITEM();
void PP_OP_UNARY_NEGATIVE();
void PP_OP_MAKE_HASH();
void PP_OP_MAKE_ARRAY();
void PP_OP_MAKE_TUPLE();
void PP_OP_EXTRACT_TUPLE();
void PP_OP_UNARY_INCREMENT();
void PP_OP_GETGLOBAL();
void PP_OP_POP_TOP();
void PP_OP_ENTER_FOREACH();
void PP_OP_FOR_ITER();
void PP_OP_JUMP_IF_STOP_EXCEPTION();
void PP_OP_DOTDOTDOT();
void PP_OP_TRY();
void PP_OP_DIE();
void PP_OP_USE();
void PP_OP_PACKAGE_ENTER();
void PP_OP_PACKAGE_LEAVE();
